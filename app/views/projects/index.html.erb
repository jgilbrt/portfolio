<head>
  <title>Projects</title>
  <meta name="turbo-cache-control" content="no-cache">
</head>


<div class="project-wrapper">

  <div class="toggle-btn-container px-3 py-4 mt-4 ms-2">
    <button id="toggle-projects-btn" class="btn btn-outline-secondary btn-sm mt-5" aria-expanded="true" aria-controls="projects-container">
      Hide Projects
    </button>
  </div>

  <div class="project-scroll-container py-3 px-2 full-vw" id="projects-container" tabindex="0" aria-label="Project cards container">
    <div class="d-flex flex-nowrap gap-3 p-2">
      <% @projects.each do |project| %>
        <div class="project-card flex-shrink-0"
             data-project-id="<%= project[:id] %>"
             data-name="<%= project[:name] %>"
             data-description="<%= project[:description] %>"
             data-image-url="<%= project[:image_url] %>">

          <div class="project-type-label <%= project[:type].parameterize(separator: '_') %>">
            <%= project[:type] %>
          </div>

          <img src="<%= project[:image_url] %>" alt="<%= project[:name] %>" />
          <div class="project-card-content">
            <h6><%= project[:name] %></h6>
            <p><%= project[:description] %></p>
          </div>
        </div>
      <% end %>
    </div>
  </div>

  <div id="selected-project-detail" class="p-4" tabindex="0" aria-live="polite" aria-atomic="true">
    <h3 class="text-center">Select a project</h3>
  </div>

</div>

<button id="back-to-top-btn" class="btn btn-secondary btn-sm position-fixed" style="bottom: 30px; right: 30px; z-index: 1100; font-family: 'Source Code Pro', monospace;">
  â†‘
</button>

<style>

  html, body {
    margin: 0;
    padding: 0;
    scroll-behavior: smooth;
  }

body, .project-type-label, #back-to-top-btn, #toggle-projects-btn {
  font-family: 'Source Code Pro', monospace;
}

.project-scroll-container {
  white-space: nowrap;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
  max-height: 320px;
  padding-top: 1rem;
  padding-bottom: 1.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
}

.project-scroll-container::-webkit-scrollbar {
  display: none;
}

.project-card {
  width: 280px;
  border-radius: 12px;
  background: #fff;
  box-shadow: 0 3px 9px rgb(0 0 0 / 0.2);
  cursor: pointer;
  transition: transform 0.3s ease, box-shadow 0.3s ease, border-color 0.3s ease;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  margin-bottom: 1rem;
}

.project-card:hover {
  transform: translateY(-8px);
  box-shadow: 0 8px 16px rgb(0 0 0 / 0.15);
}

.project-card img {
  height: 180px;
  object-fit: cover;
  border-top-left-radius: 12px;
  border-top-right-radius: 12px;
  width: 100%;
  flex-shrink: 0;
}

.project-card-content {
  padding: 12px 16px;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.project-card-content h6 {
  margin: 0 0 6px 0;
  font-weight: 700;
  font-size: 1.1rem;
  color: #222;
}

.project-card-content p {
  margin: 0;
  font-size: 0.9rem;
  color: #555;
  line-height: 1.3;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.project-type-label {
  position: absolute;
  top: 12px;
  left: 12px;
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 6px;
  font-weight: 700;
  font-size: 0.8rem;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 6px 10px;
  text-transform: uppercase;
  cursor: default;
  user-select: none;
  box-sizing: border-box;
  border: 3px solid transparent;
  color: #222;
  z-index: 10;
  white-space: nowrap;
}

.project-type-label.web_dev {
  border-color: #28a745;
  color: #28a745;
}

.project-type-label.ux_design {
  border-color: #007bff;
  color: #007bff;
}

.project-card.selected {
  border-color: orange;
  box-shadow: 0 0 8px 3px orange;
  position: relative;
}

.project-card.selected::after {
  content: "Selected";
  position: absolute;
  top: 12px;
  right: 12px;
  background-color: orange;
  color: white;
  font-size: 0.75rem;
  font-weight: 700;
  padding: 2px 6px;
  border-radius: 4px;
  font-family: 'Source Code Pro', monospace;
  user-select: none;
  pointer-events: none;
  z-index: 20;
}

.hidden {
  display: none !important;
}

.full-vw {
  width: 100vw;
}

  .toggle-btn-container {
    display: flex;
    justify-content: center !important;
  }


@media (min-width: 900px) {
  .project-wrapper {
    max-width: 900px;
    margin-left: auto;
    margin-right: auto;
    position: relative;
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .project-scroll-container {
    position: relative;
    width: 100vw;
    margin-left: calc(-50vw + 50%);
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .project-scroll-container > .d-flex {
    justify-content: center;
  }

  #selected-project-detail {
    max-width: 900px;
    margin-left: auto;
    margin-right: auto;
  }
}
</style>

<script>
function initProjectCards() {
  const backToTopBtn = document.getElementById('back-to-top-btn');
  const projectsContainer = document.getElementById('projects-container');
  const detailDiv = document.getElementById("selected-project-detail");
  const toggleBtn = document.getElementById('toggle-projects-btn');

  if (backToTopBtn) {
    backToTopBtn.onclick = () => {
      window.scrollTo({ top: 0, behavior: 'smooth' });
    };
  }

  if (projectsContainer) {
    projectsContainer.onclick = (event) => {
      const card = event.target.closest('.project-card');
      if (!card) return;

      const cards = projectsContainer.querySelectorAll('.project-card');
      cards.forEach(c => c.classList.remove('selected'));
      card.classList.add('selected');

      const projectName = card.getAttribute("data-name").toLowerCase().replace(/\s+/g, '');

      fetch(`/projects/partial/${projectName}`)
        .then(response => {
          if (!response.ok) throw new Error("Partial not found");
          return response.text();
        })
        .then(html => {
          detailDiv.innerHTML = html;
        })
        .catch(() => {
          detailDiv.innerHTML = "<p>Partial content not found.</p>";
        });
    };
  }

  if (toggleBtn && projectsContainer) {
    toggleBtn.onclick = () => {
      const isHidden = projectsContainer.classList.toggle('hidden');
      toggleBtn.textContent = isHidden ? "Show Projects" : "Hide Projects";
      toggleBtn.setAttribute('aria-expanded', !isHidden);
      if (!isHidden) {
        projectsContainer.focus();
      }
    };
  }
}


document.addEventListener('DOMContentLoaded', initProjectCards);
document.addEventListener('turbo:load', initProjectCards);
</script>
